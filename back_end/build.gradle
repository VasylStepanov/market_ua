plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.flywaydb.flyway" version "9.8.1"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.postgresql:postgresql:42.5.1'
	implementation 'com.h2database:h2:2.1.214'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task migrateDatabaseDev(type: org.flywaydb.gradle.task.FlywayMigrateTask){
	def props = new Properties()
	File propsFile = file("src/main/resources/application-dev.properties")
	props.load(new FileInputStream(propsFile));

	url = props.get("spring.datasource.url")
	user = props.get("spring.datasource.username")
	password = props.get("spring.datasource.password")
}


task migrateDatabaseProd(type: org.flywaydb.gradle.task.FlywayMigrateTask){
	def props = new Properties()
	File propsFile = file("src/main/resources/application-prod.properties")
	props.load(new FileInputStream(propsFile));

	url = props.get("spring.datasource.url")
	user = props.get("spring.datasource.username")
	password = props.get("spring.datasource.password")
}


tasks.named('test') {
	useJUnitPlatform()
}
